worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # 定义后端服务的上游组
    upstream server_backend {
        server server:8080;
    }

    upstream monitor_backend {
        server monitor:8081;
    }
    
    upstream generator_backend {
        server generator:8082;
    }

    server {
        listen       80;
        server_name  0.0.0.0

        # 前端静态文件：假设前端编译后的代码放在 web/dist 目录中
        location / {
            root   /usr/share/nginx/html;
            index  index.html;
        }

        # 业务接口转发到 server 服务
        location /api/ {
            proxy_pass http://server_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # WebSocket 接口转发到 monitor 服务
        location /ws/ {
            proxy_pass http://monitor_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
        
        # /orders/module 请求同时转发到 server 服务和 generator 服务
        location /api/orders/module {
            mirror /mirror;  # 复制请求到内部 mirror 路径
            proxy_pass http://server_backend;  # 主请求转发到 server 服务
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # 内部 mirror location 用于将请求转发到 generator 服务
        location /mirror {
            internal;  # 仅允许内部调用，防止外部访问
            proxy_pass http://generator_backend$request_uri;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}
